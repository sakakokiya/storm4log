/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.github.hackerwin7.mysql.parser.protocol.avro;
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class EventEntryAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EventEntryAvro\",\"namespace\":\"protocol.avro\",\"fields\":[{\"name\":\"mid\",\"type\":\"long\"},{\"name\":\"db\",\"type\":\"string\"},{\"name\":\"sch\",\"type\":\"string\"},{\"name\":\"tab\",\"type\":\"string\"},{\"name\":\"opt\",\"type\":\"string\"},{\"name\":\"ts\",\"type\":\"long\"},{\"name\":\"ddl\",\"type\":[\"string\",\"null\"]},{\"name\":\"err\",\"type\":[\"string\",\"null\"]},{\"name\":\"src\",\"type\":[{\"type\":\"map\",\"values\":[\"string\",\"null\"]},\"null\"]},{\"name\":\"cur\",\"type\":[{\"type\":\"map\",\"values\":[\"string\",\"null\"]},\"null\"]},{\"name\":\"cus\",\"type\":[{\"type\":\"map\",\"values\":[\"string\",\"null\"]},\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public long mid;
  @Deprecated public java.lang.CharSequence db;
  @Deprecated public java.lang.CharSequence sch;
  @Deprecated public java.lang.CharSequence tab;
  @Deprecated public java.lang.CharSequence opt;
  @Deprecated public long ts;
  @Deprecated public java.lang.CharSequence ddl;
  @Deprecated public java.lang.CharSequence err;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> src;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> cur;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> cus;

  /**
   * Default constructor.
   */
  public EventEntryAvro() {}

  /**
   * All-args constructor.
   */
  public EventEntryAvro(java.lang.Long mid, java.lang.CharSequence db, java.lang.CharSequence sch, java.lang.CharSequence tab, java.lang.CharSequence opt, java.lang.Long ts, java.lang.CharSequence ddl, java.lang.CharSequence err, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> src, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> cur, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> cus) {
    this.mid = mid;
    this.db = db;
    this.sch = sch;
    this.tab = tab;
    this.opt = opt;
    this.ts = ts;
    this.ddl = ddl;
    this.err = err;
    this.src = src;
    this.cur = cur;
    this.cus = cus;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return mid;
    case 1: return db;
    case 2: return sch;
    case 3: return tab;
    case 4: return opt;
    case 5: return ts;
    case 6: return ddl;
    case 7: return err;
    case 8: return src;
    case 9: return cur;
    case 10: return cus;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: mid = (java.lang.Long)value$; break;
    case 1: db = (java.lang.CharSequence)value$; break;
    case 2: sch = (java.lang.CharSequence)value$; break;
    case 3: tab = (java.lang.CharSequence)value$; break;
    case 4: opt = (java.lang.CharSequence)value$; break;
    case 5: ts = (java.lang.Long)value$; break;
    case 6: ddl = (java.lang.CharSequence)value$; break;
    case 7: err = (java.lang.CharSequence)value$; break;
    case 8: src = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    case 9: cur = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    case 10: cus = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'mid' field.
   */
  public java.lang.Long getMid() {
    return mid;
  }

  /**
   * Sets the value of the 'mid' field.
   * @param value the value to set.
   */
  public void setMid(java.lang.Long value) {
    this.mid = value;
  }

  /**
   * Gets the value of the 'db' field.
   */
  public java.lang.CharSequence getDb() {
    return db;
  }

  /**
   * Sets the value of the 'db' field.
   * @param value the value to set.
   */
  public void setDb(java.lang.CharSequence value) {
    this.db = value;
  }

  /**
   * Gets the value of the 'sch' field.
   */
  public java.lang.CharSequence getSch() {
    return sch;
  }

  /**
   * Sets the value of the 'sch' field.
   * @param value the value to set.
   */
  public void setSch(java.lang.CharSequence value) {
    this.sch = value;
  }

  /**
   * Gets the value of the 'tab' field.
   */
  public java.lang.CharSequence getTab() {
    return tab;
  }

  /**
   * Sets the value of the 'tab' field.
   * @param value the value to set.
   */
  public void setTab(java.lang.CharSequence value) {
    this.tab = value;
  }

  /**
   * Gets the value of the 'opt' field.
   */
  public java.lang.CharSequence getOpt() {
    return opt;
  }

  /**
   * Sets the value of the 'opt' field.
   * @param value the value to set.
   */
  public void setOpt(java.lang.CharSequence value) {
    this.opt = value;
  }

  /**
   * Gets the value of the 'ts' field.
   */
  public java.lang.Long getTs() {
    return ts;
  }

  /**
   * Sets the value of the 'ts' field.
   * @param value the value to set.
   */
  public void setTs(java.lang.Long value) {
    this.ts = value;
  }

  /**
   * Gets the value of the 'ddl' field.
   */
  public java.lang.CharSequence getDdl() {
    return ddl;
  }

  /**
   * Sets the value of the 'ddl' field.
   * @param value the value to set.
   */
  public void setDdl(java.lang.CharSequence value) {
    this.ddl = value;
  }

  /**
   * Gets the value of the 'err' field.
   */
  public java.lang.CharSequence getErr() {
    return err;
  }

  /**
   * Sets the value of the 'err' field.
   * @param value the value to set.
   */
  public void setErr(java.lang.CharSequence value) {
    this.err = value;
  }

  /**
   * Gets the value of the 'src' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getSrc() {
    return src;
  }

  /**
   * Sets the value of the 'src' field.
   * @param value the value to set.
   */
  public void setSrc(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.src = value;
  }

  /**
   * Gets the value of the 'cur' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getCur() {
    return cur;
  }

  /**
   * Sets the value of the 'cur' field.
   * @param value the value to set.
   */
  public void setCur(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.cur = value;
  }

  /**
   * Gets the value of the 'cus' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getCus() {
    return cus;
  }

  /**
   * Sets the value of the 'cus' field.
   * @param value the value to set.
   */
  public void setCus(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.cus = value;
  }

  /** Creates a new EventEntryAvro RecordBuilder */
  public static EventEntryAvro.Builder newBuilder() {
    return new EventEntryAvro.Builder();
  }
  
  /** Creates a new EventEntryAvro RecordBuilder by copying an existing Builder */
  public static EventEntryAvro.Builder newBuilder(EventEntryAvro.Builder other) {
    return new EventEntryAvro.Builder(other);
  }
  
  /** Creates a new EventEntryAvro RecordBuilder by copying an existing EventEntryAvro instance */
  public static EventEntryAvro.Builder newBuilder(EventEntryAvro other) {
    return new EventEntryAvro.Builder(other);
  }
  
  /**
   * RecordBuilder for EventEntryAvro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EventEntryAvro>
    implements org.apache.avro.data.RecordBuilder<EventEntryAvro> {

    private long mid;
    private java.lang.CharSequence db;
    private java.lang.CharSequence sch;
    private java.lang.CharSequence tab;
    private java.lang.CharSequence opt;
    private long ts;
    private java.lang.CharSequence ddl;
    private java.lang.CharSequence err;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> src;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> cur;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> cus;

    /** Creates a new Builder */
    private Builder() {
      super(EventEntryAvro.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(EventEntryAvro.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing EventEntryAvro instance */
    private Builder(EventEntryAvro other) {
            super(EventEntryAvro.SCHEMA$);
      if (isValidValue(fields()[0], other.mid)) {
        this.mid = data().deepCopy(fields()[0].schema(), other.mid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.db)) {
        this.db = data().deepCopy(fields()[1].schema(), other.db);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sch)) {
        this.sch = data().deepCopy(fields()[2].schema(), other.sch);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.tab)) {
        this.tab = data().deepCopy(fields()[3].schema(), other.tab);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.opt)) {
        this.opt = data().deepCopy(fields()[4].schema(), other.opt);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.ts)) {
        this.ts = data().deepCopy(fields()[5].schema(), other.ts);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.ddl)) {
        this.ddl = data().deepCopy(fields()[6].schema(), other.ddl);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.err)) {
        this.err = data().deepCopy(fields()[7].schema(), other.err);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.src)) {
        this.src = data().deepCopy(fields()[8].schema(), other.src);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.cur)) {
        this.cur = data().deepCopy(fields()[9].schema(), other.cur);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.cus)) {
        this.cus = data().deepCopy(fields()[10].schema(), other.cus);
        fieldSetFlags()[10] = true;
      }
    }

    /** Gets the value of the 'mid' field */
    public java.lang.Long getMid() {
      return mid;
    }
    
    /** Sets the value of the 'mid' field */
    public EventEntryAvro.Builder setMid(long value) {
      validate(fields()[0], value);
      this.mid = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'mid' field has been set */
    public boolean hasMid() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'mid' field */
    public EventEntryAvro.Builder clearMid() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'db' field */
    public java.lang.CharSequence getDb() {
      return db;
    }
    
    /** Sets the value of the 'db' field */
    public EventEntryAvro.Builder setDb(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.db = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'db' field has been set */
    public boolean hasDb() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'db' field */
    public EventEntryAvro.Builder clearDb() {
      db = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'sch' field */
    public java.lang.CharSequence getSch() {
      return sch;
    }
    
    /** Sets the value of the 'sch' field */
    public EventEntryAvro.Builder setSch(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.sch = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'sch' field has been set */
    public boolean hasSch() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'sch' field */
    public EventEntryAvro.Builder clearSch() {
      sch = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'tab' field */
    public java.lang.CharSequence getTab() {
      return tab;
    }
    
    /** Sets the value of the 'tab' field */
    public EventEntryAvro.Builder setTab(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.tab = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'tab' field has been set */
    public boolean hasTab() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'tab' field */
    public EventEntryAvro.Builder clearTab() {
      tab = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'opt' field */
    public java.lang.CharSequence getOpt() {
      return opt;
    }
    
    /** Sets the value of the 'opt' field */
    public EventEntryAvro.Builder setOpt(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.opt = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'opt' field has been set */
    public boolean hasOpt() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'opt' field */
    public EventEntryAvro.Builder clearOpt() {
      opt = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'ts' field */
    public java.lang.Long getTs() {
      return ts;
    }
    
    /** Sets the value of the 'ts' field */
    public EventEntryAvro.Builder setTs(long value) {
      validate(fields()[5], value);
      this.ts = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'ts' field has been set */
    public boolean hasTs() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'ts' field */
    public EventEntryAvro.Builder clearTs() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'ddl' field */
    public java.lang.CharSequence getDdl() {
      return ddl;
    }
    
    /** Sets the value of the 'ddl' field */
    public EventEntryAvro.Builder setDdl(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.ddl = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'ddl' field has been set */
    public boolean hasDdl() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'ddl' field */
    public EventEntryAvro.Builder clearDdl() {
      ddl = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'err' field */
    public java.lang.CharSequence getErr() {
      return err;
    }
    
    /** Sets the value of the 'err' field */
    public EventEntryAvro.Builder setErr(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.err = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'err' field has been set */
    public boolean hasErr() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'err' field */
    public EventEntryAvro.Builder clearErr() {
      err = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'src' field */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getSrc() {
      return src;
    }
    
    /** Sets the value of the 'src' field */
    public EventEntryAvro.Builder setSrc(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[8], value);
      this.src = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'src' field has been set */
    public boolean hasSrc() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'src' field */
    public EventEntryAvro.Builder clearSrc() {
      src = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'cur' field */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getCur() {
      return cur;
    }
    
    /** Sets the value of the 'cur' field */
    public EventEntryAvro.Builder setCur(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[9], value);
      this.cur = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'cur' field has been set */
    public boolean hasCur() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'cur' field */
    public EventEntryAvro.Builder clearCur() {
      cur = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'cus' field */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getCus() {
      return cus;
    }
    
    /** Sets the value of the 'cus' field */
    public EventEntryAvro.Builder setCus(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[10], value);
      this.cus = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'cus' field has been set */
    public boolean hasCus() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'cus' field */
    public EventEntryAvro.Builder clearCus() {
      cus = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    public EventEntryAvro build() {
      try {
        EventEntryAvro record = new EventEntryAvro();
        record.mid = fieldSetFlags()[0] ? this.mid : (java.lang.Long) defaultValue(fields()[0]);
        record.db = fieldSetFlags()[1] ? this.db : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.sch = fieldSetFlags()[2] ? this.sch : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.tab = fieldSetFlags()[3] ? this.tab : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.opt = fieldSetFlags()[4] ? this.opt : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.ts = fieldSetFlags()[5] ? this.ts : (java.lang.Long) defaultValue(fields()[5]);
        record.ddl = fieldSetFlags()[6] ? this.ddl : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.err = fieldSetFlags()[7] ? this.err : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.src = fieldSetFlags()[8] ? this.src : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[8]);
        record.cur = fieldSetFlags()[9] ? this.cur : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[9]);
        record.cus = fieldSetFlags()[10] ? this.cus : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[10]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
